Бакытбек уулу Нуржигит, БПИ197, Вариант 3

** Условие:

  Найти алгебраическое дополнение для каждого элемента матрицы.
целое положительное число n, произвольная матрица А размерности n х n.
Количество потоков является входным параметром, при этом размерность
матриц может быть не кратна количеству потоков.

** Входные данные:

Размерность матрицы, количестово потоков. Матрица генерируется автоматически.

** Используемая модель - Итеративный параллелизм

  Для выполнения задания требуется вычислить n*n определителей (миноров), где n размерность
матрицы. Каждое вычисление определителся - трудоемкая задача. Поэтому было принятно 
решение не распараллеливать внутри вычисление определителя, а распараллелить вычисление миноров.
Миноров n*n штук, каждый поток будет вычисять минор для отдельной позиции.
  Для вычисления использовался класс thread, но также были попробованы класс future и openMp.

Результаты измерений:
1)Если не использовать потоки, то при размерности матрицы n = 11, программа выполняется 131 секунды.
2)При использовании thread и n = 4, t = 66 секунд. Для n = 11 примерно такой же результат.
3)При использовании future время выполнения 35 секунд.
4)Использовние openMp (распараллеливние for) дал такой же результат как и thread

** Заключение:
  Так как при использовании future нет возможности при использовании стандартных библиотек задавать 
количество потоков, было принятно решение использовать thread, который на 60 секунд бытрее выполнился, чем обычное однопоточная программа, что явялется высоким показателем эффективности
многопоточных приложений для решении объемных задач.

** Источники:

1) http://www.soft.architecturenet.ru/70/index-iterativnyj-parallelizm-umnozhenie-matric.htm
2) http://softcraft.ru/edu/comparch/
3) http://staff.mmcs.sfedu.ru/~dubrov/files/sl_parallel_05_paradigm.pdf
4) Лекции и семинары по архитектуре выислительных систем
